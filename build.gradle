group 'br.com.jmsstudio'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'org.junit.platform.gradle.plugin'

sourceCompatibility = 1.8

ext {
    junitPlatformVersion = '1.0.3'
    junitJupiterVersion  = '5.0.3'
    log4jVersion         = '2.10.0'
    junitVintageVersion  = '4.12.3'
}

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.3'
    }
}

repositories {
    mavenCentral()
}

junitPlatform {
    details 'tree'
    platformVersion '1.0.3'
    filters {
        engines {
            include 'junit-jupiter'
            exclude 'custom-engine', 'junit-vintage'
        }
        tags {
            // include 'fast'
            exclude 'slow'
        }
         includeClassNamePattern '.*Test'
    }
    // configurationParameter 'junit.jupiter.conditions.deactivate', '*'
    // enableStandardTestTask true
    // reportsDir file('build/test-results/junit-platform') // this is the default
    logManager 'org.apache.logging.log4j.jul.LogManager'
}

dependencies {
    // JUnit Jupiter API and TestEngine implementation
    testCompile("org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}")

    // If you also want to support JUnit 3 and JUnit 4 tests
//    testCompile("junit:junit:${junit4Version}")
//    testRuntime("org.junit.vintage:junit-vintage-engine:${junitVintageVersion}")

    testRuntime("org.apache.logging.log4j:log4j-core:${log4jVersion}")
    testRuntime("org.apache.logging.log4j:log4j-jul:${log4jVersion}")

    // Only needed to run tests in an (IntelliJ) IDE(A) that bundles an older version
    testRuntime("org.junit.platform:junit-platform-launcher:${junitPlatformVersion}")
}